<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Luu Nguyen Phat</title>
    <link>https://phatngluu.github.io/categories/golang/</link>
    <description>Recent content in golang on Luu Nguyen Phat</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>You</copyright>
    <lastBuildDate>Wed, 09 Sep 2020 17:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://phatngluu.github.io/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GOPATH Explained</title>
      <link>https://phatngluu.github.io/posts/golang/gopath-explained/</link>
      <pubDate>Wed, 09 Sep 2020 17:00:00 +0000</pubDate>
      
      <guid>https://phatngluu.github.io/posts/golang/gopath-explained/</guid>
      <description>See details at: https://flaviocopes.com/go-gopath/
 Go programmers typically keep all their Go code in a single workspace.
A workspace contains many version control repositories (managed by Git, for example).
Each repository contains one or more packages.
 Libraries installed using go get will be put in $GOPATH/src
Commands installed using go get will be put in $GOPATH/bin</description>
    </item>
    
    <item>
      <title>Golang</title>
      <link>https://phatngluu.github.io/posts/golang/go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://phatngluu.github.io/posts/golang/go/</guid>
      <description>Nhung cai duoc Go tai ve se duoc luu tai src
go get github.com/letung3105/demo
Neu package
Go module
Go run chay code
Go build
Go install -&amp;gt; build file &amp;amp; bo vo folder bin</description>
    </item>
    
  </channel>
</rss>